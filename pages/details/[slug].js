import React from "react"
import { client } from "../../lib/client"
import Head from "next/head"
import { urlFor } from "../../lib/client"
import { nanoid } from "nanoid"

export default function ProjectDetails({ project }) {
  const {
    name,
    description,
    motivation,
    techStackReasoning,
    FuturePlans,
    liveSite,
    projectImage,
    repo,
    projectGif,
    ssOfHurdle,
    biggestChallenge,
    shortDescription,
    projectImagePlain,
    techStack,
  } = project

  console.log(project)

  const stackRendered = techStack
    .split(",")
    .map((item) => <p key={nanoid()}>{item}</p>)

  return (
    <div className="font-sans bg-slate-200 text-sm md:text-lg min-h-screen">
      <Head>
        <title>About {project?.name}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="text-left py-28 flex flex-col justify-center items-center">
        <div className="w-11/12 flex flex-col gap-12">
          <h1 className="details-h1">{name.replace(/-/g, " ")}</h1>
          <div className="flex gap-1">{stackRendered}</div>
          <div className="h-80 rounded-lg mb-12">
            <img
              className="rounded-lg w-full h-full object-cover object-center"
              src={urlFor(projectGif).url()}
              alt={`picture of my ${name} project`}
            />
          </div>
          {motivation && (
            <div>
              <h2 className="details-h2">Motivation</h2>
              <p className="details-p">{motivation}</p>
            </div>
          )}
          <div>
            <h2 className="details-h2">Description</h2>
            <p className="details-p">{description}</p>
          </div>
          {biggestChallenge && (
            <div>
              <h2 className="details-h2">Biggest Hurdle</h2>
              <p className="details-p">{biggestChallenge}</p>
              <div className="mt-12">
                <img
                  className="rounded-lg w-full h-full object-cover object-center"
                  src={urlFor(ssOfHurdle).url()}
                  alt={`screenshot of hurdle faced`}
                />
              </div>
            </div>
          )}
          <div>
            <h2 className="details-h2">FuturePlans</h2>
            <p className="details-p">{FuturePlans}</p>
          </div>
        </div>
      </div>
    </div>
  )
}

export const getStaticPaths = async () => {
  const query = await client.fetch(`*[_type == "spiceProducts"] {
      slug {
        current
      }
    }`)

  const paths = query.map((item) => {
    return {
      params: {
        slug: item.slug.current,
      },
    }
  })

  return {
    paths,
    fallback: "blocking",
  }
}

export const getStaticProps = async ({ params: { slug } }) => {
  const project = await client.fetch(
    `*[_type == "projects" && slug.current == '${slug}'][0]`
  )

  return {
    props: { project },
  }
}
